plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    alias(libs.plugins.compose.compiler)
    alias(libs.plugins.kotlin.serialization)
}

android {
    namespace 'com.datnx.router'
    compileSdk = 36

    defaultConfig {
        minSdk = 28
        targetSdk = 36
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    
    kotlinOptions {
        jvmTarget = '11'
    }
    
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }

    buildFeatures {
        compose = true
        buildConfig = true
    }
}

dependencies {

    // Design system
    implementation(libs.my.design.system)

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.androidx.activity.compose)
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.ui)
    implementation(libs.androidx.ui.graphics)
    implementation(libs.androidx.ui.tooling.preview)
    implementation(libs.androidx.material3)
    implementation(libs.androidx.ui.util)
    
    // Navigation
    implementation(libs.androidx.navigation.compose)
    implementation(libs.kotlinx.serialization.json)
    
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)
    androidTestImplementation(platform(libs.androidx.compose.bom))
    androidTestImplementation(libs.androidx.ui.test.junit4)
    debugImplementation(libs.androidx.ui.tooling)
    debugImplementation(libs.androidx.ui.test.manifest)
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                
                groupId = 'com.github.nguyenxdat'
                artifactId = 'my-auth-router'
                version = '1.0.0'
                
                pom {
                    name = 'My Auth Router Library'
                    description = 'A Flutter-inspired navigation router library for Jetpack Compose'
                    url = 'https://github.com/nguyenxdat/my-auth'
                    
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                    
                    developers {
                        developer {
                            id = 'nguyenxdat'
                            name = 'Dat Nguyen'
                            email = 'nguyenxtdat@gmail.com'
                        }
                    }
                    
                    scm {
                        connection = 'scm:git:git://github.com/nguyenxdat/my-auth.git'
                        developerConnection = 'scm:git:ssh://github.com:nguyenxdat/my-auth.git'
                        url = 'https://github.com/nguyenxdat/my-auth'
                    }
                }
            }
        }
    }
}
